（例如['sk-SK', 'sr-RS']）還是其中之一['am-Am', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-EH', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-PS', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'az-AZ', 'az-LB', 'az-LY', 'be-BY', 'bg-BG', 'bn-BD', 'bs-BA', 'ca-AD', 'cs-CZ', 'da-DK', 'de-AT', 'de-CH', 'de-DE', 'de-LU', 'dv-MV', 'dz-BT', 'el-CY', 'el-GR', 'en-AG', 'en-AI', 'en-AU', 'en-BM', 'en-BS', 'en-BW', 'en-CA', 'en-GB', 'en-GG', 'en-GH', 'en-GY', 'en-HK', 'en-IE', 'en-IN', 'en-JM', 'en-KE', 'en-KI', 'en-KN', 'en-LS', 'en-MO', 'en-MT', 'en-MU', 'en-NG', 'en-NZ', 'en-PG', 'en-PH', 'en-PK', 'en-RW', 'en-SG', 'en-SL', 'en-SS', 'en-TZ', 'en-UG', 'en-US', 'en-ZA', 'en-ZM', 'en-ZW', 'es-AR', 'es-BO', 'es-CL', 'es-CO', 'es-CR', 'es-CU', 'es-DO', 'es-EC', 'es-ES', 'es-HN', 'es-MX', 'es-NI', 'es-PA', 'es-PE', 'es-PY', 'es-SV', 'es-UY', 'es-VE', 'et-EE', 'fa-AF', 'fa-IR', 'fi-FI', 'fj-FJ', 'fo-FO', 'fr-BE', 'fr-BF', 'fr-BJ', 'fr-CD', 'fr-CF', 'fr-FR', 'fr-GF', 'fr-GP', 'fr-MQ', 'fr-PF', 'fr-RE', 'fr-WF', 'ga-IE', 'he-IL', 'hu-HU', 'id-ID', 'ir-IR', 'it-IT', 'it-SM', 'ja-JP', 'ka-GE', 'kk-KZ', 'kl-GL', 'ko-KR', 'ky-KG', 'lt-LT', 'mg-MG', 'mn-MN', 'ms-MY', 'my-MM', 'mz-MZ', 'nb-NO', 'ne-NP', 'nl-AW', 'nl-BE', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-AO', 'pt-BR', 'pt-PT', 'ro-Md', 'ro-RO', 'ru-RU', 'si-LK', 'sk-SK', 'sl-SI', 'so-SO', 'sq-AL', 'sr-RS', 'sv-SE', 'tg-TJ', 'th-TH', 'tk-TM', 'tr-TR', 'uk-UA', 'uz-UZ', 'vi-VN', 'zh-CN', 'zh-HK', 'zh-MO', 'zh-TW']或預設'any'。如果使用“any”或 false 值，函數將檢查是否有任何區域設定匹配）。

options是一個可選對象，可以透過以下按鍵提供：strictMode，如果設定為true，則行動電話號碼必須與國家代碼一起提供，因此必須以 開頭+。區域設定列表是validator.isMobilePhoneLocales.
isMongoId(str)	檢查字串是否是MongoDB ObjectId的有效十六進位編碼表示形式。
isMultibyte(str)	檢查字串是否包含一個或多個多位元組字元。
isNumeric(str [, 選項])	檢查字串是否僅包含數字。

options是一個預設的對象，{ no_symbols: false }它也有locale一個選項。如果no_symbols為 true，驗證器將拒絕帶有符號（例如+、-或.）的數字字串。

locale確定小數點分隔符號並且是其中之一['ar', 'ar-AE', 'ar-BH', 'ar-DZ', 'ar-EG', 'ar-IQ', 'ar-JO', 'ar-KW', 'ar-LB', 'ar-LY', 'ar-MA', 'ar-QA', 'ar-QM', 'ar-SA', 'ar-SD', 'ar-SY', 'ar-TN', 'ar-YE', 'bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'en-AU', 'en-GB', 'en-HK', 'en-IN', 'en-NZ', 'en-US', 'en-ZA', 'en-ZM', 'es-ES', 'fr-FR', 'fr-CA', 'hu-HU', 'it-IT', 'nb-NO', 'nl-NL', 'nn-NO', 'pl-PL', 'pt-BR', 'pt-PT', 'ru-RU', 'sl-SI', 'sr-RS', 'sr-RS@latin', 'sv-SE', 'tr-TR', 'uk-UA']。
isOctal(str)	檢查字串是否是有效的八進制數。
isPassportNumber(str, 國家/地區代碼)	檢查該字串是否為有效的護照號碼。

countryCode是其中之一['AM', 'AR', 'AT', 'AU', 'AZ', 'BE', 'BG', 'BY', 'BR', 'CA', 'CH', 'CN', 'CY', 'CZ', 'DE', 'DK', 'DZ', 'EE', 'ES', 'FI', 'FR', 'GB', 'GR', 'HR', 'HU', 'IE', 'IN', 'IR', 'ID', 'IS', 'IT', 'JM', 'JP', 'KR', 'KZ', 'LI', 'LT', 'LU', 'LV', 'LY', 'MT', 'MX', 'MY', 'MZ', 'NL', 'NZ', 'PH', 'PK', 'PL', 'PT', 'RO', 'RU', 'SE', 'SL', 'SK', 'TH', 'TR', 'UA', 'US']。
是連接埠(str)	檢查該字串是否為有效的連接埠號碼。
isPostalCode(str, 區域設定)	檢查字串是否是郵遞區號。是OR

locale之一。如果使用“any”，函數將檢查是否有任何區域設定匹配。區域設定列表是.['AD', 'AT', 'AU', 'AZ', 'BA', 'BE', 'BG', 'BR', 'BY', 'CA', 'CH', 'CN', 'CZ', 'DE', 'DK', 'DO', 'DZ', 'EE', 'ES', 'FI', 'FR', 'GB', 'GR', 'HR', 'HT', 'HU', 'ID', 'IE', 'IL', 'IN', 'IR', 'IS', 'IT', 'JP', 'KE', 'KR', 'LI', 'LK', 'LT', 'LU', 'LV', 'MG', 'MT', 'MX', 'MY', 'NL', 'NO', 'NP', 'NZ', 'PL', 'PR', 'PT', 'RO', 'RU', 'SA', 'SE', 'SG', 'SI', 'SK', 'TH', 'TN', 'TW', 'UA', 'US', 'ZA', 'ZM']'any'validator.isPostalCodeLocales
isRFC3339(str)	檢查字串是否為有效的RFC 3339日期。
isRgbColor(str [, includePercentValues])	檢查字串是否為 rgb 或 rgba 顏色。

includePercentValues預設為true. 如果您不想允許使用百分比設定rgb或值，例如、 或，則將其設為 false。rgbargb(5%,5%,5%)rgba(90%,90%,90%,.3)
isSemVer(str)	檢查字串是否為語意版本控制規範 (SemVer)。
isSurrogatePair(str)	檢查字串是否包含任何代理對字元。
是大寫（str）	檢查字串是否為大寫。
isSlug(str)	檢查字串是否為 slug 類型。
isStrongPassword(str [, 選項])	檢查該字串是否可以被視為強密碼。允許自訂要求或評分規則。如果returnScore為 true，則函數傳回密碼的整數分數而不是布林值。
預設選項：
{ minLength: 8, minLowercase: 1, minUppercase: 1, minNumbers: 1, minSymbols: 1, returnScore: false, pointsPerUnique: 1, pointsPerRepeat: 0.5, pointsForContainingLower: 10, pointsForContainingUpper: 10, pointsForContainingNumber: 10, pointsForContainingSymbol: 10 }
isTime(str [, 選項])	檢查字串是否為有效時間，例如 [ 23:01:59, new Date().toLocaleTimeString()]。

options是一個可以包含鍵hourFormat或 的物件mode。

hourFormat是一個鍵，預設為'hour24'。

mode是一個鍵，預設為'default'。

hourFomat可以包含值'hour12'或'hour24'，'hour24'將驗證 24 格式的小時數並將'hour12'驗證 12 格式的小時數。

mode可以包含值'default'或'withSeconds'，'default'將驗證HH:MM格式，'withSeconds'將驗證HH:MM:SS格式。
isTaxID(str, 區域設定)	檢查該字串是否為有效的納稅識別號碼。預設區域設定是en-US.

有關確切 TIN 支援的更多信息，請參閱src/lib/isTaxID.js。

支援的語言環境：[ 'bg-BG', 'cs-CZ', 'de-AT', 'de-DE', 'dk-DK', 'el-CY', 'el-GR', 'en-CA', 'en-GB', 'en-IE', 'en-US', 'es-ES', 'et-EE', 'fi-FI', 'fr-BE', 'fr-CA', 'fr-FR', 'fr-LU', 'hr-HR', 'hu-HU', 'it-IT', 'lb-LU', 'lt-LT', 'lv-LV', 'mt-MT', 'nl-BE', 'nl-NL', 'pl-PL', 'pt-BR', 'pt-PT', 'ro-RO', 'sk-SK', 'sl-SI', 'sv-SE' ].
isURL(str [, 選項])	check if the string is a URL.

options is an object which defaults to { protocols: ['http','https','ftp'], require_tld: true, require_protocol: false, require_host: true, require_port: false, require_valid_protocol: true, allow_underscores: false, host_whitelist: false, host_blacklist: false, allow_trailing_dot: false, allow_protocol_relative_urls: false, allow_fragments: true, allow_query_components: true, disallow_auth: false, validate_length: true }.

require_protocol - if set to true isURL will return false if protocol is not present in the URL.
require_valid_protocol - isURL will check if the URL's protocol is present in the protocols option.
protocols - valid protocols can be modified with this option.
require_host - if set to false isURL will not check if host is present in the URL.
require_port - if set to true isURL will check if port is present in the URL.
allow_protocol_relative_urls - if set to true protocol relative URLs will be allowed.
allow_fragments - if set to false isURL will return false if fragments are present.
allow_query_components - if set to false isURL will return false if query components are present.
validate_length - if set to false isURL will skip string length validation (2083 characters is IE max URL length).
isUUID(str [, version])	check if the string is a UUID (version 1, 2, 3, 4 or 5).
isVariableWidth(str)	check if the string contains a mixture of full and half-width chars.
isVAT(str, countryCode)	check if the string is a valid VAT number if validation is available for the given country code matching ISO 3166-1 alpha-2.

countryCode is one of ['AL', 'AR', 'AT', 'AU', 'BE', 'BG', 'BO', 'BR', 'BY', 'CA', 'CH', 'CL', 'CO', 'CR', 'CY', 'CZ', 'DE', 'DK', 'DO', 'EC', 'EE', 'EL', 'ES', 'FI', 'FR', 'GB', 'GT', 'HN', 'HR', 'HU', 'ID', 'IE', 'IL', 'IN', 'IS', 'IT', 'KZ', 'LT', 'LU', 'LV', 'MK', 'MT', 'MX', 'NG', 'NI', 'NL', 'NO', 'NZ', 'PA', 'PE', 'PH', 'PL', 'PT', 'PY', 'RO', 'RS', 'RU', 'SA', 'SE', 'SI', 'SK', 'SM', 'SV', 'TR', 'UA', 'UY', 'UZ', 'VE'].
isWhitelisted(str, chars)	check if the string consists only of characters that appear in the whitelist chars.
matches(str, pattern [, modifiers])	check if the string matches the pattern.

Either matches('foo', /foo/i) or matches('foo', 'foo', 'i').
Sanitizers
Here is a list of the sanitizers currently available.

Sanitizer	Description
blacklist(input, chars)	remove characters that appear in the blacklist. The characters are used in a RegExp and so you will need to escape some chars, e.g. blacklist(input, '\\[\\]').
escape(input)	replace <, >, &, ', " and / with HTML entities.
ltrim(input [, chars])	trim characters from the left-side of the input.
normalizeEmail(email [, options])	canonicalize an email address. (This doesn't validate that the input is an email, if you want to validate the email use isEmail beforehand).

options is an object with the following keys and default values:
all_lowercase: true - Transforms the local part (before the @ symbol) of all email addresses to lowercase. Please note that this may violate RFC 5321, which gives providers the possibility to treat the local part of email addresses in a case sensitive way (although in practice most - yet not all - providers don't). The domain part of the email address is always lowercased, as it is case insensitive per RFC 1035.
gmail_lowercase: true - Gmail addresses are known to be case-insensitive, so this switch allows lowercasing them even when all_lowercase is set to false. Please note that when all_lowercase is true, Gmail addresses are lowercased regardless of the value of this setting.
gmail_remove_dots: true：從電子郵件地址的本機部分中刪除點，因為 Gmail 會忽略它們（例如「john.doe」和「johndoe」被視為相等）。
gmail_remove_subaddress: true：透過刪除「子位址」（即「+」號後面的部分）來標準化位址（例如「foo+bar@gmail.com」變成「foo@gmail.com」）。
gmail_convert_googlemaildotcom: true：將網域為 @googlemail.com 的位址轉換為 @gmail.com，因為它們是等效的。
Outlookdotcom_lowercase: true - Outlook.com 位址（包括 Windows Live 和 Hotmail）已知不區分大小寫，因此即使all_lowercase設為 false，此開關也允許將其小寫。請注意，當all_lowercase為 true 時，無論此設定的值為何，Outlook.com 位址都會小寫。
Outlookdotcom_remove_subaddress: true：透過刪除「子位址」（即「+」號後面的部分）來標準化位址（例如「foo+bar@outlook.com」變成「foo@outlook.com」）。
yahoo_lowercase: true - Yahoo Mail 位址不區分大小寫，因此即使all_lowercase設為 false，此開關也允許將其小寫。請注意，當all_lowercase為 true 時，無論此設定的值為何，Yahoo Mail 位址都會小寫。
yahoo_remove_subaddress: true：透過刪除「子位址」（即「-」符號後面的部分）來標準化位址（例如「foo-bar@yahoo.com」變成「foo@yahoo.com」）。
icloud_lowercase: true - iCloud 位址（包括 MobileMe）已知不區分大小寫，因此即使all_lowercase設為 false，此開關也允許將其小寫。請注意，當all_lowercase為 true 時，無論此設定的值為何，iCloud 位址都會小寫。
icloud_remove_subaddress: true：透過刪除「子位址」（即「+」號後面的部分）來標準化位址（例如「foo+bar@icloud.com」變成「foo@icloud.com」）。
rtrim（輸入[，字元]）	從輸入的右側修剪字元。
stripLow（輸入[，keep_new_lines]）	刪除數值 < 32 和 127 的字符，主要是控製字符。如果keep_new_lines是true，則保留換行符（\n和\r、十六進位0xA和0xD）。JavaScript 中的 Unicode 安全性。
toBoolean(輸入[,嚴格])	將輸入字串轉換為布林值。除了 和 之外的所有'0'內容'false'都''返回true。僅在嚴格模式下'1'並'true'返回true。
截止日期（輸入）	將輸入字串轉換為日期，或null如果輸入不是日期。
浮動（輸入）	將輸入字串轉換為浮點數，或NaN如果輸入不是浮點數。
toInt(輸入[,基數])	將輸入字串轉換為整數，或NaN如果輸入不是整數。
修剪（輸入[，字元]）	修剪輸入兩側的字元（預設為空格）。
取消轉義（輸入）	將 HTML 編碼實體替換為<、>、&、'和"。/
白名單（輸入，字元）	刪除未出現在白名單中的字元。這些字符在正則表達式中使用，因此您需要轉義一些字符，例如whitelist(input, '\\[\\]')。
XSS 清理
XSS 清理已於2d5d6999從庫中刪除。

作為替代方案，請查看 Yahoo 的xss-filters 庫或DOMPurify。

貢獻
一般來說，我們遵循「fork-and-pull」Git 工作流程。

在 GitHub 上分叉該儲存庫
將項目克隆到您自己的機器上
在你的叉子上工作
進行更改和添加
您的大部分變更應該集中在src/資料test/夾和/或README.md.
資料夾中的validator.js、validator.min.js等檔案lib/是在執行tests( npm test)時自動產生的，無需手動變更。
如果需要，請更改或新增測試
運行測試並確保它們通過
如果需要，請新增對 README.md 的更改
將更改提交到您自己的分支
確保合併來自“上游”的最新內容並解決衝突（如果有）
重複上面的步驟 3(3)
將你的工作推回你的叉子上
提交 Pull 請求，以便我們審核您的更改
測試
測試使用 mocha，執行測試使用：

$ npm測試
維護者
chriso——克里斯·奧哈拉（作者）
profnandaa -安東尼·南達
ezkemboi - Ezrqn Kemboi
tux-tn -薩爾汗艾西
閱讀
請記住，驗證有時可能很麻煩。請參閱有關通常不正確的程式設計假設的文章清單。

許可證（麻省理工學院）
Copyright (c) 2018 Chris O'Hara <cohara87@gmail.com>

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
自述文件
關鍵字
驗證器驗證證實消毒消毒消毒消毒斷言
包側邊欄
安裝
npm i validator

儲存庫
github.com/validatorjs/validator.js

首頁
github.com/validatorjs/validator.js

每週下載量
8,237,512

版本
13.11.0

執照
麻省理工學院

拆封尺寸
751 KB

文件總數
221

問題
166

請求請求
183

最後發布
6 個月前

合作者
科哈拉87
普羅南達
嘗試RunKit
報告惡意軟體